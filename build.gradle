plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'ru.clevertec'
version = '0.0.1-SNAPSHOT'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	mavenLocal()
}

ext {
	mapstructVersion = '1.5.5.Final'
	set('springCloudVersion', "2023.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'ru.clevertec:loggingstarter:1.0.0'
	implementation 'ru.clevertec:cachestarter:1.0.2'
	implementation 'ru.clevertec:exceptionhandlerstarter:1.0.0'

	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

	implementation("org.mapstruct:mapstruct:${mapstructVersion}")
	annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
	testAnnotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation "org.testcontainers:postgresql"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'io.projectreactor', name: 'reactor-test', version: '3.6.3'
	testImplementation group: 'org.wiremock', name: 'wiremock-standalone',version: '3.3.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
